[{"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/index.js":"1","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/reportWebVitals.js":"2","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/App/App.js":"3","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/FindARoommate/FindARoommate.js":"4","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/NavBar/NavBar.js":"5","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/About/About.js":"6","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/assets/tileData.js":"7","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/apiCalls.js":"8","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/Profile/Profile.js":"9","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/Thumbnails/Thumbnails.js":"10","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/Form/Form.js":"11","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/store.js":"12","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/actions.js":"13","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/AllResidents/AllResidents.js":"14","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/MyApplications/MyApplications.js":"15","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/AppliedCard/AppliedCard.js":"16","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/ChatBox/ChatBox.js":"17"},{"size":717,"mtime":1611532038816,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1610757510016,"results":"20","hashOfConfig":"19"},{"size":1119,"mtime":1611546537381,"results":"21","hashOfConfig":"19"},{"size":2924,"mtime":1611601671178,"results":"22","hashOfConfig":"19"},{"size":1978,"mtime":1611615707863,"results":"23","hashOfConfig":"19"},{"size":3162,"mtime":1611633613717,"results":"24","hashOfConfig":"19"},{"size":794,"mtime":1610757510015,"results":"25","hashOfConfig":"19"},{"size":357,"mtime":1611544307142,"results":"26","hashOfConfig":"19"},{"size":9071,"mtime":1611711770700,"results":"27","hashOfConfig":"19"},{"size":2430,"mtime":1611633143383,"results":"28","hashOfConfig":"19"},{"size":1708,"mtime":1611596676624,"results":"29","hashOfConfig":"19"},{"size":291,"mtime":1611591664894,"results":"30","hashOfConfig":"19"},{"size":1462,"mtime":1611710125535,"results":"31","hashOfConfig":"19"},{"size":1941,"mtime":1611544747048,"results":"32","hashOfConfig":"19"},{"size":1907,"mtime":1611712299495,"results":"33","hashOfConfig":"19"},{"size":7526,"mtime":1611712299495,"results":"34","hashOfConfig":"19"},{"size":3860,"mtime":1611682478675,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1n2h0ky",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/index.js",[],["73","74"],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/reportWebVitals.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/App/App.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/FindARoommate/FindARoommate.js",["75","76","77"],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/NavBar/NavBar.js",["78","79"],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/About/About.js",["80"],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/assets/tileData.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/apiCalls.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/Profile/Profile.js",["81","82","83","84"],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/Thumbnails/Thumbnails.js",["85","86","87"],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/Form/Form.js",["88","89"],"import React, { useState } from \"react\";\nimport useGlobal from \"../store\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 180,\n  },\n}));\n\nfunction Form({ selectSemester }) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const [globalState, globalActions] = useGlobal();\n  const [semester, setSemester] = useGlobal((state) => state.semester);\n\n  const handleChange = (event) => {\n    const selectedSemester = event.target.value;\n    globalActions.selectSemester(selectedSemester);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <FormControl className={classes.formControl} semester={semester}>\n        <InputLabel id=\"dropdown-menu\">Choose a semester</InputLabel>\n        <Select\n          labelId=\"dropdown-menu\"\n          id=\"semester-dropdown\"\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={semester}\n          onChange={handleChange}\n        >\n          <MenuItem value=\"Spring-2021\">Spring 2021</MenuItem>\n          <MenuItem value=\"Summer-2021\">Summer 2021</MenuItem>\n          <MenuItem value=\"Fall-2021\">Fall 2021</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n\nForm.propTypes = {\n  selectSemester: PropTypes.func,\n};\n\nexport default Form;\n","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/store.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/actions.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/AllResidents/AllResidents.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/MyApplications/MyApplications.js",["90","91","92","93","94"],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/AppliedCard/AppliedCard.js",["95","96","97","98"],"import React, { useState, useEffect } from \"react\";\nimport useGlobal from \"../store\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\n\n// import ChatBox from \"../ChatBox/ChatBox\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport clsx from \"clsx\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Fab from \"@material-ui/core/Fab\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 375,\n    paddingTop: \"5vh\",\n    paddingBottom: \"10px\",\n    //345\n  },\n  media: {\n    height: \"50vh\",\n    //140\n  },\n  buttonBar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    textTransform: \"capitalize\",\n    paddingLeft: \"10px\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  paper: {\n    maxWidth: 400,\n    // margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2),\n    backgroundColor: \"#9a9ca21f\",\n  },\n  avatar: {\n    backgroundColor: \"#00acc1\",\n  },\n  avatar2: {\n    backgroundColor: \"#d86464\",\n  },\n  messageArea: {\n    height: \"100%\",\n    width: \"100%\",\n    overflowY: \"auto\",\n    padding: 4,\n  },\n  chatBox: {\n    // padding: 0,\n  },\n  userChatItem: {\n    justifyContent: \"flex-end\",\n  },\n  residentChatItem: {\n    justifyContent: \"flex-start\",\n  },\n}));\n\nconst AppliedCard = ({\n  resident,\n  id,\n  key,\n  name,\n  image,\n  age,\n  semester,\n  dateApplied,\n  applied,\n  message,\n}) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n  const [messageValue, setMessageValue] = useState(\"\");\n  const [globalState, globalActions] = useGlobal();\n  const [residentsApplied, setResidentsApplied] = useGlobal(\n    (state) => state.residentsApplied\n  );\n  // useEffect(() => {\n\n  // }, [message]);\n\n  useEffect(() => console.log(\"AppliedCard mounted\"), []);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const updateMessage = (event) => {\n    event.preventDefault();\n    setMessageValue(event.target.value);\n  };\n\n  const handleSendMessage = () => {\n    // event.preventDefault();\n    const newMessage = messageValue;\n    const residentToMessage = resident;\n    globalActions.addMessageToApplied(residentToMessage, newMessage);\n    setMessageValue(\"\");\n\n    console.log(resident.message);\n  };\n\n  return (\n    <Card className={classes.root} id={id} key={key}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={image}\n          title={`photo of ${name}`}\n          onClick={console.log(\"resident on photo click\", resident.message)}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"#31424c\" component=\"p\">\n            <b>Semester:</b> {semester}\n          </Typography>\n          <Typography variant=\"body2\" color=\"#31424c\" component=\"p\">\n            <b> Date Applied:</b> {dateApplied}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <Divider />\n      <CardActions disableSpacing>\n        <>\n          <div className={classes.buttonBar}>\n            <Typography\n              variant=\"button\"\n              color=\"textSecondary\"\n              style={{ paddingRight: \"10px\" }}\n              capitalize\n            >\n              Message {name}\n            </Typography>\n            <ChatOutlinedIcon color=\"secondary\" />\n          </div>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Grid container className={classes.chatBox}>\n            <List className={classes.messageArea}>\n              <ListItem className={classes.residentChatItem} key=\"1\">\n                <ListItemIcon style={{ paddingRight: \"0px\" }}>\n                  <Avatar\n                    // src={image}\n                    // alt={name}\n                    aria-label={`resident ${name}'s avatar`}\n                    size=\"small\"\n                    className={classes.avatar}\n                  >\n                    {name[0]}\n                  </Avatar>\n                </ListItemIcon>\n                <Paper className={classes.paper}>\n                  <Grid container wrap=\"nowrap\" spacing={2}>\n                    <Grid item>\n                      <Typography>{`Hello, I'm ${name}`}</Typography>\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </ListItem>\n              {/* {message !== \"\" && ( */}\n              <ListItem className={classes.userChatItem} key={message}>\n                <Paper className={classes.paper}>\n                  <Grid container wrap=\"nowrap\" spacing={2}>\n                    <Grid item>\n                      <Typography>{message}</Typography>\n                    </Grid>\n                  </Grid>\n                </Paper>\n\n                <ListItemIcon style={{ paddingLeft: \"15px\" }}>\n                  <Avatar\n                    aria-label=\"user's avatar\"\n                    size=\"small\"\n                    className={classes.avatar2}\n                  >\n                    U\n                  </Avatar>\n                </ListItemIcon>\n              </ListItem>\n              {/* )} */}\n            </List>\n\n            <Grid container style={{ padding: \"30px 15px 20px 15px\" }}>\n              <Grid item xs={11}>\n                <form>\n                  <TextField\n                    id=\"outlined-basic-email\"\n                    label=\"Type a message\"\n                    value={messageValue}\n                    onChange={updateMessage}\n                    fullWidth\n                  />\n                </form>\n              </Grid>\n              <Grid xs={1} align=\"right\">\n                <Fab\n                  size=\"small\"\n                  color=\"primary\"\n                  aria-label=\"send-message\"\n                  onClick={handleSendMessage}\n                >\n                  <SendIcon />\n                </Fab>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default AppliedCard;\n","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/ChatBox/ChatBox.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":50,"column":10,"nodeType":"105","messageId":"106","endLine":50,"endColumn":21},{"ruleId":"103","severity":1,"message":"107","line":50,"column":23,"nodeType":"105","messageId":"106","endLine":50,"endColumn":36},{"ruleId":"103","severity":1,"message":"108","line":51,"column":20,"nodeType":"105","messageId":"106","endLine":51,"endColumn":31},{"ruleId":"103","severity":1,"message":"104","line":36,"column":10,"nodeType":"105","messageId":"106","endLine":36,"endColumn":21},{"ruleId":"103","severity":1,"message":"109","line":37,"column":15,"nodeType":"105","messageId":"106","endLine":37,"endColumn":21},{"ruleId":"103","severity":1,"message":"104","line":79,"column":10,"nodeType":"105","messageId":"106","endLine":79,"endColumn":21},{"ruleId":"103","severity":1,"message":"110","line":13,"column":8,"nodeType":"105","messageId":"106","endLine":13,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":88,"column":10,"nodeType":"105","messageId":"106","endLine":88,"endColumn":21},{"ruleId":"103","severity":1,"message":"111","line":89,"column":10,"nodeType":"105","messageId":"106","endLine":89,"endColumn":26},{"ruleId":"103","severity":1,"message":"112","line":89,"column":28,"nodeType":"105","messageId":"106","endLine":89,"endColumn":47},{"ruleId":"103","severity":1,"message":"104","line":40,"column":10,"nodeType":"105","messageId":"106","endLine":40,"endColumn":21},{"ruleId":"103","severity":1,"message":"111","line":41,"column":10,"nodeType":"105","messageId":"106","endLine":41,"endColumn":26},{"ruleId":"103","severity":1,"message":"112","line":41,"column":28,"nodeType":"105","messageId":"106","endLine":41,"endColumn":47},{"ruleId":"103","severity":1,"message":"104","line":21,"column":10,"nodeType":"105","messageId":"106","endLine":21,"endColumn":21},{"ruleId":"103","severity":1,"message":"108","line":22,"column":20,"nodeType":"105","messageId":"106","endLine":22,"endColumn":31},{"ruleId":"103","severity":1,"message":"113","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"114","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":15},{"ruleId":"103","severity":1,"message":"104","line":38,"column":10,"nodeType":"105","messageId":"106","endLine":38,"endColumn":21},{"ruleId":"103","severity":1,"message":"107","line":38,"column":23,"nodeType":"105","messageId":"106","endLine":38,"endColumn":36},{"ruleId":"103","severity":1,"message":"112","line":39,"column":28,"nodeType":"105","messageId":"106","endLine":39,"endColumn":47},{"ruleId":"103","severity":1,"message":"115","line":21,"column":8,"nodeType":"105","messageId":"106","endLine":21,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":101,"column":10,"nodeType":"105","messageId":"106","endLine":101,"endColumn":21},{"ruleId":"103","severity":1,"message":"111","line":102,"column":10,"nodeType":"105","messageId":"106","endLine":102,"endColumn":26},{"ruleId":"103","severity":1,"message":"112","line":102,"column":28,"nodeType":"105","messageId":"106","endLine":102,"endColumn":47},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'globalState' is assigned a value but never used.","Identifier","unusedVar","'globalActions' is assigned a value but never used.","'setSemester' is assigned a value but never used.","'setTab' is assigned a value but never used.","'FavoriteIcon' is defined but never used.","'residentsApplied' is assigned a value but never used.","'setResidentsApplied' is assigned a value but never used.","'useState' is defined but never used.","'ChatBox' is defined but never used.","'ListItemText' is defined but never used.","no-global-assign","no-unsafe-negation"]