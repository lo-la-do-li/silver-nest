[{"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/index.js":"1","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/reportWebVitals.js":"2","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/App/App.js":"3","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/FindARoommate/FindARoommate.js":"4","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/NavBar/NavBar.js":"5","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/About/About.js":"6","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/assets/tileData.js":"7","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/apiCalls.js":"8","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/Profile/Profile.js":"9","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/Thumbnails/Thumbnails.js":"10","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/Form/Form.js":"11","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/AllResidents/AllResidents.js":"12","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/MyApplications/MyApplications.js":"13","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/store.js":"14","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/AppliedCard/AppliedCard.js":"15","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/actions.js":"16","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/residentsData.js":"17"},{"size":383,"mtime":1612025413303,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1610757510016,"results":"20","hashOfConfig":"19"},{"size":1119,"mtime":1611730566498,"results":"21","hashOfConfig":"19"},{"size":3181,"mtime":1616612419211,"results":"22","hashOfConfig":"19"},{"size":1950,"mtime":1611791000252,"results":"23","hashOfConfig":"19"},{"size":3399,"mtime":1611787758658,"results":"24","hashOfConfig":"19"},{"size":821,"mtime":1612026225358,"results":"25","hashOfConfig":"19"},{"size":466,"mtime":1616607192989,"results":"26","hashOfConfig":"19"},{"size":8886,"mtime":1611788005939,"results":"27","hashOfConfig":"19"},{"size":2326,"mtime":1611730566506,"results":"28","hashOfConfig":"19"},{"size":1781,"mtime":1611785248050,"results":"29","hashOfConfig":"19"},{"size":1941,"mtime":1611730566497,"results":"30","hashOfConfig":"19"},{"size":2091,"mtime":1611788314150,"results":"31","hashOfConfig":"19"},{"size":350,"mtime":1616612933858,"results":"32","hashOfConfig":"19"},{"size":7627,"mtime":1611790032274,"results":"33","hashOfConfig":"19"},{"size":1230,"mtime":1611787539234,"results":"34","hashOfConfig":"19"},{"size":9228,"mtime":1616614646832,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1n2h0ky",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/index.js",[],["79","80"],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/reportWebVitals.js",[],["81","82"],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/App/App.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/FindARoommate/FindARoommate.js",["83","84","85","86"],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/NavBar/NavBar.js",["87","88"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { Link } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport silverNestLogo from \"../silverNestLogo3.png\";\nimport useGlobal from \"../store\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    // flexGrow: 1,\n    overflow: \"scroll\",\n  },\n  box: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    paddingRight: \"1.5vw\",\n  },\n  tabs: {\n    flexGrow: 1,\n  },\n  logo: {\n    marginTop: 10,\n    height: 28,\n  },\n});\n\nconst NavBar = () => {\n  const classes = useStyles();\n  const [globalState, globalActions] = useGlobal();\n  const [tab, setTab] = useGlobal((state) => state.tab);\n\n  const handleTab = (event, tab) => {\n    globalActions.handleTabChange(tab);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <Tabs\n        className={classes.tabs}\n        value={tab}\n        onChange={handleTab}\n        indicatorColor=\"secondary\"\n        textColor=\"secondary\"\n        // centered\n      >\n        <Tab label=\"About\" component={Link} to=\"/about\" value={0} />\n        <Tab\n          label=\"Find A Roommate\"\n          component={Link}\n          to=\"/find-a-roommate\"\n          value={1}\n        />\n        <Tab\n          label=\"Applications\"\n          component={Link}\n          to=\"/my-applications\"\n          value={2}\n        />\n        {/* <Tab\n          label=\"All Residents\"\n          component={Link}\n          to=\"/all-residents\"\n          value={2}\n        /> */}\n      </Tabs>\n      <Box className={classes.box}>\n        <img\n          className={classes.logo}\n          src={silverNestLogo}\n          alt=\"Turing School of Health Sciences Logo\"\n        />\n      </Box>\n    </Paper>\n  );\n};\n\nexport default NavBar;\n","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/About/About.js",["89","90","91"],"import React from \"react\";\nimport useGlobal from \"../store\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport { tileData } from \"../assets/tileData.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    maxWidth: \"95%\",\n    padding: theme.spacing(2),\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column-reverse\",\n      padding: 0,\n    },\n\n    [theme.breakpoints.down(\"md\")]: {\n      padding: 0,\n    },\n  },\n  box: {\n    padding: theme.spacing(2),\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"1vw\",\n    },\n  },\n  gridList: {\n    paddingTop: \"2vh\",\n    cellHeight: 160,\n    cols: 3,\n    [theme.breakpoints.down(\"xs\")]: {\n      flexWrap: \"wrap-reverse\",\n    },\n  },\n  h1: {\n    textAlign: \"left\",\n    color: \"#7c8181\",\n    fontSize: \"2vw\",\n    paddingLeft: \"1vw\",\n    paddingTop: \"5vh\",\n    [theme.breakpoints.only(\"xs\")]: {\n      fontSize: \"3vw\",\n      paddingTop: \"3vh\",\n    },\n    [theme.breakpoints.only(\"sm\")]: {\n      fontSize: \"2.4vw\",\n    },\n    [theme.breakpoints.only(\"md\")]: {\n      fontSize: \"2.4vw\",\n      paddingRight: 0,\n    },\n    [theme.breakpoints.only(\"lg\")]: {\n      fontSize: \"2.2vw\",\n      paddingRight: 0,\n    },\n  },\n  button: {\n    padding: \"1.2vw\",\n    margin: \"8vh\",\n    fontSize: \"1.2vw\",\n    [theme.breakpoints.only(\"xs\")]: {\n      fontSize: \"2vw\",\n      padding: \"1.2vh\",\n      margin: \"3vh\",\n    },\n    [theme.breakpoints.only(\"sm\")]: {\n      margin: \"3vh\",\n      fontSize: \"1.8vw\",\n      padding: \"1.5vh\",\n      margin: \"4.5vh\",\n    },\n    [theme.breakpoints.only(\"md\")]: {\n      margin: \"3vh\",\n      fontSize: \"1.5vw\",\n      padding: \"2vh\",\n      margin: \"5vh\",\n    },\n    [theme.breakpoints.up(\"xl\")]: {\n      fontSize: \"1.2vw\",\n    },\n  },\n}));\n\nfunction About() {\n  const classes = useStyles();\n  const [globalState, globalActions] = useGlobal();\n\n  const handleTab = (tab) => {\n    globalActions.handleTabChange(tab);\n  };\n\n  return (\n    <Container className={classes.root}>\n      <div className={classes.box}>\n        <GridList className={classes.gridList} cols={3}>\n          {tileData.map((tile) => (\n            <GridListTile key={tile.img} cols={tile.cols || 1}>\n              <img src={tile.img} alt={tile.title} />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n      <div className={classes.box}>\n        {/* <Box className={classes.box}> */}\n        <h1 className={classes.h1}>\n          Turing School of Health Sciences has partnered with Mountain View\n          Residences, a senior independent living resort, to match qualified\n          Health Sciences Students to elderly residents living in the community\n          based on compatibility of living preferences, needs, and schedules.\n        </h1>\n        {/* </Box> */}\n        <Button\n          className={classes.button}\n          component={Link}\n          to=\"/find-a-roommate\"\n          onClick={() => handleTab(1)}\n          variant=\"outlined\"\n          color=\"secondary\"\n        >\n          Find a Roommate\n        </Button>\n      </div>\n    </Container>\n  );\n}\n\nexport default About;\n","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/assets/tileData.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/apiCalls.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/Profile/Profile.js",["92"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport LocalHospitalRoundedIcon from \"@material-ui/icons/LocalHospitalRounded\";\nimport PropTypes from \"prop-types\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport turingHealthLogo from \"../turingHealthLogo.png\";\nimport useGlobal from \"../store\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 60,\n    textAlign: \"left\",\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  medText: {\n    align: \"left\",\n    fontSize: \"16\",\n    color: \"textSecondary\",\n    paddingLeft: \"6vw\",\n  },\n  avatar: {\n    backgroundColor: \"#00acc1\",\n  },\n  info: {\n    marginRight: \"5vw\",\n    marginLeft: \"5vw\",\n  },\n  heartImg: {\n    height: 40,\n    marginBottom: -17,\n    paddingRight: 10,\n    [theme.breakpoints.only(\"xs\")]: {\n      display: \"none\",\n    },\n    [theme.breakpoints.only(\"sm\")]: {},\n  },\n  buttonDisabled: {\n    color: \"#00acc1\",\n    cursor: \"auto\",\n    [theme.breakpoints.only(\"xs\")]: {\n      fontSize: \"2.2vw\",\n      padding: 3,\n    },\n  },\n  button: {\n    [theme.breakpoints.only(\"xs\")]: {\n      fontSize: \"2.5vw\",\n      padding: 6,\n    },\n  },\n}));\n\nfunction Profile({ resident, exitProfileView, isAvailable }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [globalState, globalActions] = useGlobal();\n\n  const handleOpenDialogue = () => {\n    setOpen(true);\n  };\n\n  const handleCloseDialogue = () => {\n    setOpen(false);\n  };\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleCloseProfile = () => {\n    let noResident = \"\";\n    exitProfileView(noResident);\n  };\n\n  const handleApplyAgree = (resident) => {\n    globalActions.saveResidentApplied(resident);\n    globalActions.determineApplyStatus(resident);\n    handleCloseDialogue();\n  };\n\n  const handleApplyDisagree = () => {\n    handleCloseDialogue();\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"resident\" className={classes.avatar}>\n            {resident.name[0]}\n          </Avatar>\n        }\n        action={\n          <>\n            {resident.applied && (\n              <>\n                <img\n                  className={classes.heartImg}\n                  src={turingHealthLogo}\n                  alt=\"application-in-process\"\n                />\n                <Button\n                  className={classes.buttonDisabled}\n                  size=\"medium\"\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  aria-label=\"application-pending\"\n                  disableRipple={true}\n                >\n                  Application Pending\n                </Button>\n              </>\n            )}\n            {!resident.applied && (\n              <>\n                <Button\n                  className={classes.button}\n                  onClick={handleOpenDialogue}\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  aria-label=\"apply for housing\"\n                >\n                  Apply for Housing\n                </Button>\n\n                <Dialog\n                  open={open}\n                  onClose={handleCloseDialogue}\n                  aria-labelledby=\"alert-dialog-apply-for-housing\"\n                  aria-describedby=\"alert-dialog-agree-or-disagree\"\n                >\n                  <DialogTitle id=\"alert-dialog-apply\">\n                    Submit Application?\n                  </DialogTitle>\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                      Choose \"Agree\" if you would like to submit your\n                      application to house with {resident.name} for the semester\n                      of {resident.semester}. You will be notified via email if\n                      you are selected for this residency position pending\n                      approval.\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleApplyDisagree} color=\"secondary\">\n                      Disagree\n                    </Button>\n                    <Button\n                      onClick={() => handleApplyAgree(resident)}\n                      color=\"secondary\"\n                      autoFocus\n                    >\n                      Agree\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </>\n            )}\n            <IconButton\n              aria-label=\"cancel\"\n              onClick={() => {\n                handleCloseProfile();\n              }}\n            >\n              <CloseIcon fontSize=\"medium\" />\n            </IconButton>\n          </>\n        }\n        title={resident.name}\n        subheader={resident.semester}\n      />\n\n      <CardMedia\n        className={classes.media}\n        image={resident.photo}\n        title={`${resident.name}'s Photo`}\n      />\n\n      <CardContent className={classes.info}>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Age:\n        </Typography>\n        <Typography paragraph>{`${resident.age}`}</Typography>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Interests:\n        </Typography>\n        <Typography paragraph>{`${resident.interests}`}</Typography>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Previous Career:\n        </Typography>\n        <Typography paragraph>{`${resident.previous_career}`}</Typography>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Pets:\n        </Typography>\n        <Typography paragraph>{`${resident.pets}`}</Typography>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Living Preferences:\n        </Typography>\n        <Typography paragraph>{`${resident.living_preferences}`}</Typography>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Additional Notes:\n        </Typography>\n        <Typography paragraph>{`${resident.additional_notes}`}</Typography>\n      </CardContent>\n\n      <CardActions disableSpacing>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show-medical-details\"\n        >\n          <LocalHospitalRoundedIcon fontSize=\"large\" color=\"secondary\" />\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent align=\"left\" className={classes.info}>\n          <Typography\n            paragraph=\"true\"\n            align=\"left\"\n            variant=\"h6\"\n            color=\"textPrimary\"\n          >\n            <b>Medical Information</b>\n          </Typography>\n          <Typography>\n            <b>Height:</b> {`${resident.height}`}\n          </Typography>\n          <Typography>\n            <b>Weight:</b> {`${resident.weight}`}\n          </Typography>\n          <Typography>\n            <b>PCP:</b> {`${resident.pcp}`}\n          </Typography>\n          <Typography>\n            <b>Ambulatory:</b> {`${resident.ambulatory}`}\n          </Typography>\n          <Typography>\n            <b>Help With Medications:</b> {`${resident.help_with_medications}`}\n          </Typography>\n          <Typography>\n            <b>Other Impairments:</b> {`${resident.other_impairments}`}\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n\nProfile.propTypes = {\n  resident: PropTypes.object,\n  exitProfileView: PropTypes.func,\n};\n\nexport default Profile;\n","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/Thumbnails/Thumbnails.js",["93"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    transform: 'translateZ(0)',\n  },\n  title: {\n    color: theme.palette.secondary,\n    fontSize: 24,\n  },\n  icon: {\n    color: '#f8f8ff',\n    cursor: 'point'\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n}));\n\n\nfunction Thumbnails({availableResidents, allResidents, selectResident, semesterAvailable}) {\n  const classes = useStyles();\n\n  const handleClick = (resident) => {\n    selectResident(resident);\n  }\n\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={2.5}>\n        {availableResidents.map((resident, index) => (\n          <GridListTile key={index} >\n            <img src={resident.photo} id={resident.id} alt={resident.name} />\n            <GridListTileBar\n              title={resident.name}\n              classes={{\n                root: classes.titleBar,\n                title: classes.title,\n              }}\n              actionIcon={\n                <IconButton aria-label={`profile ${resident.name}`} onClick={() => handleClick(resident)}>\n                  <AccountBoxIcon fontSize='large' className={classes.icon} centerRipple />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n\nThumbnails.propTypes = {\n  availableResidents: PropTypes.array,\n  allResidents: PropTypes.array, \n  selectResident: PropTypes.func,\n  semesterAvailable: PropTypes.string,\n}\n\nexport default Thumbnails;","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/Form/Form.js",["94","95"],"import React, { useState } from \"react\";\nimport useGlobal from \"../store\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 180,\n    paddingTop: \"1vh\",\n    paddingBottom: \"3vh]=[\",\n  },\n}));\n\nfunction Form() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const [globalState, globalActions] = useGlobal();\n  const [semester, setSemester] = useGlobal((state) => state.semester);\n\n  const handleChange = (event) => {\n    const selectedSemester = event.target.value;\n    globalActions.selectSemester(selectedSemester);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <FormControl className={classes.formControl} semester={semester}>\n        <InputLabel id=\"dropdown-menu\">Choose a semester</InputLabel>\n        <Select\n          style={{ color: \"#df757d\" }}\n          labelId=\"dropdown-menu\"\n          id=\"semester-dropdown\"\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={semester}\n          onChange={handleChange}\n        >\n          <MenuItem value=\"Spring-2021\">Spring 2021</MenuItem>\n          <MenuItem value=\"Summer-2021\">Summer 2021</MenuItem>\n          <MenuItem value=\"Fall-2021\">Fall 2021</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n\nForm.propTypes = {\n  selectSemester: PropTypes.func,\n};\n\nexport default Form;\n","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/AllResidents/AllResidents.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/MyApplications/MyApplications.js",["96"],"import React from \"react\";\nimport useGlobal from \"../store\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppliedCard from \"../AppliedCard/AppliedCard\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  container: {\n    display: \"grid\",\n    padding: \"2vw\",\n    gridTemplateColumns: \"repeat(3, 1fr)\",\n    gridGap: \"30px\",\n    placeItems: \"center\",\n    [theme.breakpoints.only(\"xs\")]: {\n      gridTemplateColumns: \"repeat(1, 1fr)\",\n      placeItems: \"stretch\",\n    },\n    [theme.breakpoints.only(\"sm\")]: {\n      gridTemplateColumns: \"repeat(2, 1fr)\",\n    },\n    [theme.breakpoints.only(\"md\")]: {\n      gridTemplateColumns: \"repeat(3, 1fr)\",\n    },\n  },\n  box: {\n    paddingTop: \"8vh\",\n    paddingBottom: \"5vh\",\n    color: \"#7c8181\",\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst MyApplications = () => {\n  const classes = useStyles();\n  const [residentsApplied, setResidentsApplied] = useGlobal(\n    (state) => state.residentsApplied\n  );\n  const applications = residentsApplied.map((resident) => {\n    return (\n      <AppliedCard\n        resident={resident}\n        id={resident.id}\n        key={resident.id}\n        name={resident.name}\n        image={resident.photo}\n        age={resident.age}\n        semester={resident.semester}\n        dateApplied={resident.dateApplied}\n      />\n    );\n  });\n\n  return (\n    <>\n      <Box className={classes.box}>\n        <Typography\n          variant=\"button\"\n          color=\"textSecondary\"\n          style={{ fontSize: \"24px\" }}\n          capitalize={true}\n        >\n          My Applications\n        </Typography>\n      </Box>\n      <Divider />\n      <div className={classes.root}>\n        <Container className={classes.container}>{applications}</Container>\n      </div>\n    </>\n  );\n};\nexport default MyApplications;\n","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/store.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/AppliedCard/AppliedCard.js",["97","98","99"],"import React, { useState, useEffect } from \"react\";\nimport useGlobal from \"../store\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport clsx from \"clsx\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Fab from \"@material-ui/core/Fab\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    paddingTop: \"3vh\",\n    paddingBottom: \"10px\",\n    //345\n  },\n  media: {\n    height: \"40vh\",\n    //140\n  },\n  content: {\n    padding: \"10px\",\n    color: \"#31424c\",\n    textAlign: \"left\",\n  },\n  buttonBar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    textTransform: \"capitalize\",\n    paddingLeft: \"10px\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  paper: {\n    maxWidth: 400,\n    padding: \"1.5vh\",\n    backgroundColor: \"#9a9ca21f\",\n  },\n  avatar: {\n    backgroundColor: \"#00acc1\",\n  },\n  avatar2: {\n    backgroundColor: \"#d86464\",\n  },\n  messageArea: {\n    height: \"100%\",\n    width: \"100%\",\n    overflowY: \"auto\",\n    padding: 1,\n  },\n  userChatItem: {\n    justifyContent: \"flex-end\",\n  },\n  residentChatItem: {\n    justifyContent: \"flex-start\",\n  },\n}));\n\nconst AppliedCard = ({\n  resident,\n  id,\n  key,\n  name,\n  image,\n  age,\n  semester,\n  dateApplied,\n}) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n  const [messageValue, setMessageValue] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [globalState, globalActions] = useGlobal();\n  const [residentsApplied, setResidentsApplied] = useGlobal(\n    (state) => state.residentsApplied\n  );\n\n  useEffect(() => {\n    let updatedMsg;\n    if (resident.message === undefined) {\n      updatedMsg = \"...\";\n    } else {\n      updatedMsg = resident.message;\n    }\n    setMessage(updatedMsg);\n  }, [resident.message]);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const updateMessage = (event) => {\n    event.preventDefault();\n    setMessageValue(event.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n  };\n\n  const handleSendMessage = () => {\n    const newMessage = messageValue;\n    const residentToMessage = resident;\n    setMessage(newMessage);\n    globalActions.addMessageToApplied(residentToMessage, newMessage);\n    setMessageValue(\"\");\n  };\n\n  return (\n    <Card className={classes.root} id={id} key={key}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={image}\n          title={`photo of ${name}`}\n        />\n        <CardContent>\n          <div className={classes.content}>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {name}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              <b>Semester : </b> {semester}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              <b> Date Applied : </b> {dateApplied}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              <b> Status :</b> Pending Approval\n            </Typography>\n          </div>\n        </CardContent>\n      </CardActionArea>\n      <Divider />\n      <CardActions disableSpacing>\n        <>\n          <div className={classes.buttonBar}>\n            <Typography\n              variant=\"button\"\n              color=\"textSecondary\"\n              style={{ paddingRight: \"10px\" }}\n            >\n              Message {name}\n            </Typography>\n            <ChatOutlinedIcon color=\"secondary\" />\n          </div>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n            value={id}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <Divider />\n        <CardContent>\n          <Grid container>\n            <List className={classes.messageArea}>\n              <ListItem className={classes.residentChatItem} key=\"1\">\n                <ListItemIcon style={{ paddingRight: \"0px\" }}>\n                  <Avatar\n                    // src={image}\n                    // alt={name}\n                    aria-label={`resident ${name}'s avatar`}\n                    size=\"small\"\n                    className={classes.avatar}\n                  >\n                    {name[0]}\n                  </Avatar>\n                </ListItemIcon>\n                <Paper className={classes.paper}>\n                  <Grid container wrap=\"nowrap\" spacing={2}>\n                    <Grid item>\n                      <Typography>{`Hello, I'm ${name}`}</Typography>\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </ListItem>\n\n              <ListItem className={classes.userChatItem} key={message}>\n                <Paper className={classes.paper}>\n                  <Grid container wrap=\"nowrap\" spacing={2}>\n                    <Grid item>\n                      <Typography>{message}</Typography>\n                    </Grid>\n                  </Grid>\n                </Paper>\n\n                <ListItemIcon style={{ paddingLeft: \"15px\" }}>\n                  <Avatar\n                    aria-label=\"user's avatar\"\n                    size=\"small\"\n                    className={classes.avatar2}\n                  >\n                    U\n                  </Avatar>\n                </ListItemIcon>\n              </ListItem>\n            </List>\n\n            <Grid container style={{ padding: \"30px 0px 15px 20px\" }}>\n              <Grid item xs={10}>\n                <form onSubmit={submitHandler}>\n                  <TextField\n                    id=\"outlined-basic-email\"\n                    label=\"Type a message\"\n                    value={messageValue}\n                    onChange={updateMessage}\n                    fullWidth\n                  />\n                </form>\n              </Grid>\n              <Grid xs={1} align=\"right\">\n                <Fab\n                  size=\"small\"\n                  color=\"primary\"\n                  aria-label=\"send-message\"\n                  onClick={handleSendMessage}\n                >\n                  <SendIcon />\n                </Fab>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default AppliedCard;\n","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/actions.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/residentsData.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"100","replacedBy":"104"},{"ruleId":"102","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":45,"column":24,"nodeType":"108","messageId":"109","endLine":45,"endColumn":39},{"ruleId":"106","severity":1,"message":"110","line":51,"column":20,"nodeType":"108","messageId":"109","endLine":51,"endColumn":31},{"ruleId":"111","severity":1,"message":"112","line":59,"column":6,"nodeType":"113","endLine":59,"endColumn":16,"suggestions":"114"},{"ruleId":"106","severity":1,"message":"115","line":61,"column":9,"nodeType":"108","messageId":"109","endLine":61,"endColumn":30},{"ruleId":"106","severity":1,"message":"116","line":35,"column":10,"nodeType":"108","messageId":"109","endLine":35,"endColumn":21},{"ruleId":"106","severity":1,"message":"117","line":36,"column":15,"nodeType":"108","messageId":"109","endLine":36,"endColumn":21},{"ruleId":"118","severity":1,"message":"119","line":76,"column":7,"nodeType":"120","messageId":"121","endLine":76,"endColumn":13},{"ruleId":"118","severity":1,"message":"119","line":82,"column":7,"nodeType":"120","messageId":"121","endLine":82,"endColumn":13},{"ruleId":"106","severity":1,"message":"116","line":92,"column":10,"nodeType":"108","messageId":"109","endLine":92,"endColumn":21},{"ruleId":"106","severity":1,"message":"116","line":87,"column":10,"nodeType":"108","messageId":"109","endLine":87,"endColumn":21},{"ruleId":"106","severity":1,"message":"116","line":40,"column":10,"nodeType":"108","messageId":"109","endLine":40,"endColumn":21},{"ruleId":"106","severity":1,"message":"116","line":23,"column":10,"nodeType":"108","messageId":"109","endLine":23,"endColumn":21},{"ruleId":"106","severity":1,"message":"110","line":24,"column":20,"nodeType":"108","messageId":"109","endLine":24,"endColumn":31},{"ruleId":"106","severity":1,"message":"122","line":45,"column":28,"nodeType":"108","messageId":"109","endLine":45,"endColumn":47},{"ruleId":"106","severity":1,"message":"116","line":98,"column":10,"nodeType":"108","messageId":"109","endLine":98,"endColumn":21},{"ruleId":"106","severity":1,"message":"123","line":99,"column":10,"nodeType":"108","messageId":"109","endLine":99,"endColumn":26},{"ruleId":"106","severity":1,"message":"122","line":99,"column":28,"nodeType":"108","messageId":"109","endLine":99,"endColumn":47},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],["124"],["125"],"no-unused-vars","'setAllResidents' is assigned a value but never used.","Identifier","unusedVar","'setSemester' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'availableResidents' and 'backupGetAvailableResidents'. Either include them or remove the dependency array.","ArrayExpression",["126"],"'getAvailableResidents' is assigned a value but never used.","'globalState' is assigned a value but never used.","'setTab' is assigned a value but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","'setResidentsApplied' is assigned a value but never used.","'residentsApplied' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [availableResidents, backupGetAvailableResidents, semester]",{"range":"129","text":"130"},[1600,1610],"[availableResidents, backupGetAvailableResidents, semester]"]