[{"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/index.js":"1","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/reportWebVitals.js":"2","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/App/App.js":"3","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/FindARoommate/FindARoommate.js":"4","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/NavBar/NavBar.js":"5","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/About/About.js":"6","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/assets/tileData.js":"7","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/apiCalls.js":"8","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/Profile/Profile.js":"9","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/Thumbnails/Thumbnails.js":"10","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/Form/Form.js":"11","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/AllResidents/AllResidents.js":"12","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/MyApplications/MyApplications.js":"13","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/store.js":"14","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/AppliedCard/AppliedCard.js":"15","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/actions.js":"16"},{"size":717,"mtime":1611730566509,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1610757510016,"results":"19","hashOfConfig":"18"},{"size":1119,"mtime":1611730566498,"results":"20","hashOfConfig":"18"},{"size":3229,"mtime":1611777856906,"results":"21","hashOfConfig":"18"},{"size":1951,"mtime":1611730566504,"results":"22","hashOfConfig":"18"},{"size":3397,"mtime":1611774370048,"results":"23","hashOfConfig":"18"},{"size":794,"mtime":1610757510015,"results":"24","hashOfConfig":"18"},{"size":357,"mtime":1611730566508,"results":"25","hashOfConfig":"18"},{"size":8897,"mtime":1611772122505,"results":"26","hashOfConfig":"18"},{"size":2326,"mtime":1611730566506,"results":"27","hashOfConfig":"18"},{"size":1781,"mtime":1611775929899,"results":"28","hashOfConfig":"18"},{"size":1941,"mtime":1611730566497,"results":"29","hashOfConfig":"18"},{"size":1711,"mtime":1611730566503,"results":"30","hashOfConfig":"18"},{"size":291,"mtime":1611730566509,"results":"31","hashOfConfig":"18"},{"size":7362,"mtime":1611730986824,"results":"32","hashOfConfig":"18"},{"size":1376,"mtime":1611730566507,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n2h0ky",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/index.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/reportWebVitals.js",[],["72","73"],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/App/App.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/FindARoommate/FindARoommate.js",["74","75","76","77"],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/NavBar/NavBar.js",["78","79"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport silverNestLogo from '../silverNestLogo3.png';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexGrow: 1,\n  },\n  box: {\n    display: \"flex\", \n    flexDirection: 'row', \n    justifyContent: 'center', \n    paddingRight: '1.5vw',\n  },\n  logo: {\n    paddingTop: 10,\n    height: 37\n  }\n});\n\nconst NavBar = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor=\"secondary\"\n        textColor=\"secondary\"\n        centered\n      >\n        <Tab label=\"About\" component={Link} to=\"/about\"/>\n        <Tab label=\"Find A Roommate\" component={Link} to=\"/find-a-roommate\"/>\n      </Tabs>\n        <Box className={classes.box}>\n          <img className={classes.logo} src={silverNestLogo} alt='Turing School of Health Sciences Logo'/>\n        </Box>\n    </Paper>\n  );\n}\n\nexport default NavBar;","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/About/About.js",["80","81","82"],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/assets/tileData.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/apiCalls.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/Profile/Profile.js",["83","84","85"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport LocalHospitalRoundedIcon from \"@material-ui/icons/LocalHospitalRounded\";\nimport PropTypes from \"prop-types\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport turingHealthLogo from \"../turingHealthLogo.png\";\nimport useGlobal from \"../store\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 60,\n    textAlign: \"left\",\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  medText: {\n    align: \"left\",\n    fontSize: \"16\",\n    color: \"textSecondary\",\n    paddingLeft: \"6vw\",\n  },\n  avatar: {\n    backgroundColor: \"#00acc1\",\n  },\n  info: {\n    marginRight: \"5vw\",\n    marginLeft: \"5vw\",\n  },\n  heartImg: {\n    height: 40,\n    marginBottom: -17,\n    paddingRight: 10,\n    [theme.breakpoints.only(\"xs\")]: {\n      display: \"none\",\n    },\n    [theme.breakpoints.only(\"sm\")]: {\n      // fontSize: \"2.4vw\",\n    },\n  },\n  buttonDisabled: {\n    color: \"#00acc1\",\n    cursor: \"auto\",\n    [theme.breakpoints.only(\"xs\")]: {\n      fontSize: \"2.2vw\",\n      // border: \"none\",\n      padding: 3,\n    },\n  },\n}));\n\nfunction Profile({ resident, exitProfileView, isAvailable }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [globalState, globalActions] = useGlobal();\n  const [residentsApplied, setResidentsApplied] = useGlobal(\n    (state) => state.residentsApplied\n  );\n\n  const handleOpenDialogue = () => {\n    setOpen(true);\n  };\n\n  const handleCloseDialogue = () => {\n    setOpen(false);\n  };\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleCloseProfile = () => {\n    let noResident = \"\";\n    exitProfileView(noResident);\n  };\n\n  const handleApplyAgree = (resident) => {\n    globalActions.saveResidentApplied(resident);\n    globalActions.determineApplyStatus(resident);\n    handleCloseDialogue();\n  };\n\n  const handleApplyDisagree = () => {\n    handleCloseDialogue();\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"resident\" className={classes.avatar}>\n            {resident.name[0]}\n          </Avatar>\n        }\n        action={\n          <>\n            {resident.applied && (\n              <>\n                <img\n                  className={classes.heartImg}\n                  src={turingHealthLogo}\n                  alt=\"application-in-process\"\n                />\n                <Button\n                  className={classes.buttonDisabled}\n                  size=\"medium\"\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  aria-label=\"application-pending\"\n                  disableRipple={true}\n                >\n                  Application Pending\n                </Button>\n              </>\n            )}\n            {!resident.applied && (\n              <>\n                <Button\n                  onClick={handleOpenDialogue}\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  aria-label=\"apply for housing\"\n                >\n                  Apply for Housing\n                </Button>\n\n                <Dialog\n                  open={open}\n                  onClose={handleCloseDialogue}\n                  aria-labelledby=\"alert-dialog-apply-for-housing\"\n                  aria-describedby=\"alert-dialog-agree-or-disagree\"\n                >\n                  <DialogTitle id=\"alert-dialog-apply\">\n                    Submit Application?\n                  </DialogTitle>\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                      Choose \"Agree\" if you would like to submit your\n                      application to house with {resident.name} for the semester\n                      of {resident.semester}. You will be notified via email if\n                      you are selected for this residency position pending\n                      approval.\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleApplyDisagree} color=\"secondary\">\n                      Disagree\n                    </Button>\n                    <Button\n                      onClick={() => handleApplyAgree(resident)}\n                      color=\"secondary\"\n                      autoFocus\n                    >\n                      Agree\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </>\n            )}\n            <IconButton\n              aria-label=\"cancel\"\n              onClick={() => {\n                handleCloseProfile();\n              }}\n            >\n              <CloseIcon fontSize=\"large\" />\n            </IconButton>\n          </>\n        }\n        title={resident.name}\n        subheader={resident.semester}\n      />\n\n      <CardMedia\n        className={classes.media}\n        image={resident.photo}\n        title={`${resident.name}'s Photo`}\n      />\n\n      <CardContent className={classes.info}>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Age:\n        </Typography>\n        <Typography paragraph>{`${resident.age}`}</Typography>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Interests:\n        </Typography>\n        <Typography paragraph>{`${resident.interests}`}</Typography>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Previous Career:\n        </Typography>\n        <Typography paragraph>{`${resident.previous_career}`}</Typography>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Pets:\n        </Typography>\n        <Typography paragraph>{`${resident.pets}`}</Typography>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Living Preferences:\n        </Typography>\n        <Typography paragraph>{`${resident.living_preferences}`}</Typography>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Additional Notes:\n        </Typography>\n        <Typography paragraph>{`${resident.additional_notes}`}</Typography>\n      </CardContent>\n\n      <CardActions disableSpacing>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show-medical-details\"\n        >\n          <LocalHospitalRoundedIcon fontSize=\"large\" color=\"secondary\" />\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent align=\"left\" className={classes.info}>\n          <Typography\n            paragraph=\"true\"\n            align=\"left\"\n            variant=\"h6\"\n            color=\"textPrimary\"\n          >\n            <b>Medical Information</b>\n          </Typography>\n          <Typography>\n            <b>Height:</b> {`${resident.height}`}\n          </Typography>\n          <Typography>\n            <b>Weight:</b> {`${resident.weight}`}\n          </Typography>\n          <Typography>\n            <b>PCP:</b> {`${resident.pcp}`}\n          </Typography>\n          <Typography>\n            <b>Ambulatory:</b> {`${resident.ambulatory}`}\n          </Typography>\n          <Typography>\n            <b>Help With Medications:</b> {`${resident.help_with_medications}`}\n          </Typography>\n          <Typography>\n            <b>Other Impairments:</b> {`${resident.other_impairments}`}\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n\nProfile.propTypes = {\n  resident: PropTypes.object,\n  exitProfileView: PropTypes.func,\n};\n\nexport default Profile;\n","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/Thumbnails/Thumbnails.js",["86"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    transform: 'translateZ(0)',\n  },\n  title: {\n    color: theme.palette.secondary,\n    fontSize: 24,\n  },\n  icon: {\n    color: '#f8f8ff',\n    cursor: 'point'\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n}));\n\n\nfunction Thumbnails({availableResidents, allResidents, selectResident, semesterAvailable}) {\n  const classes = useStyles();\n\n  const handleClick = (resident) => {\n    selectResident(resident);\n  }\n\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={2.5}>\n        {availableResidents.map((resident, index) => (\n          <GridListTile key={index} >\n            <img src={resident.photo} id={resident.id} alt={resident.name} />\n            <GridListTileBar\n              title={resident.name}\n              classes={{\n                root: classes.titleBar,\n                title: classes.title,\n              }}\n              actionIcon={\n                <IconButton aria-label={`profile ${resident.name}`} onClick={() => handleClick(resident)}>\n                  <AccountBoxIcon fontSize='large' className={classes.icon} centerRipple />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n\nThumbnails.propTypes = {\n  availableResidents: PropTypes.array,\n  allResidents: PropTypes.array, \n  selectResident: PropTypes.func,\n  semesterAvailable: PropTypes.string,\n}\n\nexport default Thumbnails;","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/Form/Form.js",["87","88"],"import React, { useState } from \"react\";\nimport useGlobal from \"../store\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 180,\n    paddingTop: \"1vh\",\n    paddingBottom: \"3vh]=[\",\n  },\n}));\n\nfunction Form() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const [globalState, globalActions] = useGlobal();\n  const [semester, setSemester] = useGlobal((state) => state.semester);\n\n  const handleChange = (event) => {\n    const selectedSemester = event.target.value;\n    globalActions.selectSemester(selectedSemester);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <FormControl className={classes.formControl} semester={semester}>\n        <InputLabel id=\"dropdown-menu\">Choose a semester</InputLabel>\n        <Select\n          style={{ color: \"#df757d\" }}\n          labelId=\"dropdown-menu\"\n          id=\"semester-dropdown\"\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={semester}\n          onChange={handleChange}\n        >\n          <MenuItem value=\"Spring-2021\">Spring 2021</MenuItem>\n          <MenuItem value=\"Summer-2021\">Summer 2021</MenuItem>\n          <MenuItem value=\"Fall-2021\">Fall 2021</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n\nForm.propTypes = {\n  selectSemester: PropTypes.func,\n};\n\nexport default Form;\n","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/AllResidents/AllResidents.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/MyApplications/MyApplications.js",["89","90","91","92","93"],"import React, { useState, useEffect } from \"react\";\nimport useGlobal from \"../store\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppliedCard from \"../AppliedCard/AppliedCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  container: {\n    display: \"grid\",\n    padding: \"2vw\",\n    gridTemplateColumns: \"repeat(3, 1fr)\",\n    gridGap: \"50px\",\n    [theme.breakpoints.only(\"xs\")]: {\n      gridTemplateColumns: \"repeat(1, 1fr)\",\n    },\n    [theme.breakpoints.only(\"sm\")]: {\n      gridTemplateColumns: \"repeat(2, 1fr)\",\n    },\n  },\n  text: {\n    color: \"#7c8181\",\n    paddingTop: \"5vh\",\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst MyApplications = () => {\n  const classes = useStyles();\n  const [globalState, globalActions] = useGlobal();\n  const [residentsApplied, setResidentsApplied] = useGlobal(\n    (state) => state.residentsApplied\n  );\n  const applications = residentsApplied.map((resident) => {\n    return (\n      <AppliedCard\n        resident={resident}\n        id={resident.id}\n        key={resident.id}\n        name={resident.name}\n        image={resident.photo}\n        age={resident.age}\n        semester={resident.semester}\n        dateApplied={resident.dateApplied}\n      />\n    );\n  });\n\n  return (\n    <>\n      <Box className={classes.text}>\n        <h1>Applications Pending</h1>\n      </Box>\n      <div className={classes.root}>\n        <Container className={classes.container}>{applications}</Container>\n      </div>\n    </>\n  );\n};\nexport default MyApplications;\n","/Users/loladolinsky/Desktop/projects-github/silver-nest/src/store.js",[],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/AppliedCard/AppliedCard.js",["94","95","96"],"/Users/loladolinsky/Desktop/projects-github/silver-nest/src/actions.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":48,"column":10,"nodeType":"103","messageId":"104","endLine":48,"endColumn":21},{"ruleId":"101","severity":1,"message":"105","line":48,"column":23,"nodeType":"103","messageId":"104","endLine":48,"endColumn":36},{"ruleId":"101","severity":1,"message":"106","line":49,"column":20,"nodeType":"103","messageId":"104","endLine":49,"endColumn":31},{"ruleId":"101","severity":1,"message":"107","line":73,"column":9,"nodeType":"103","messageId":"104","endLine":73,"endColumn":24},{"ruleId":"101","severity":1,"message":"102","line":35,"column":10,"nodeType":"103","messageId":"104","endLine":35,"endColumn":21},{"ruleId":"101","severity":1,"message":"108","line":36,"column":15,"nodeType":"103","messageId":"104","endLine":36,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":76,"column":7,"nodeType":"111","messageId":"112","endLine":76,"endColumn":13},{"ruleId":"109","severity":1,"message":"110","line":82,"column":7,"nodeType":"111","messageId":"112","endLine":82,"endColumn":13},{"ruleId":"101","severity":1,"message":"102","line":92,"column":10,"nodeType":"103","messageId":"104","endLine":92,"endColumn":21},{"ruleId":"101","severity":1,"message":"102","line":84,"column":10,"nodeType":"103","messageId":"104","endLine":84,"endColumn":21},{"ruleId":"101","severity":1,"message":"113","line":85,"column":10,"nodeType":"103","messageId":"104","endLine":85,"endColumn":26},{"ruleId":"101","severity":1,"message":"114","line":85,"column":28,"nodeType":"103","messageId":"104","endLine":85,"endColumn":47},{"ruleId":"101","severity":1,"message":"102","line":40,"column":10,"nodeType":"103","messageId":"104","endLine":40,"endColumn":21},{"ruleId":"101","severity":1,"message":"102","line":23,"column":10,"nodeType":"103","messageId":"104","endLine":23,"endColumn":21},{"ruleId":"101","severity":1,"message":"106","line":24,"column":20,"nodeType":"103","messageId":"104","endLine":24,"endColumn":31},{"ruleId":"101","severity":1,"message":"115","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"116","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"102","line":37,"column":10,"nodeType":"103","messageId":"104","endLine":37,"endColumn":21},{"ruleId":"101","severity":1,"message":"105","line":37,"column":23,"nodeType":"103","messageId":"104","endLine":37,"endColumn":36},{"ruleId":"101","severity":1,"message":"114","line":38,"column":28,"nodeType":"103","messageId":"104","endLine":38,"endColumn":47},{"ruleId":"101","severity":1,"message":"102","line":96,"column":10,"nodeType":"103","messageId":"104","endLine":96,"endColumn":21},{"ruleId":"101","severity":1,"message":"113","line":97,"column":10,"nodeType":"103","messageId":"104","endLine":97,"endColumn":26},{"ruleId":"101","severity":1,"message":"114","line":97,"column":28,"nodeType":"103","messageId":"104","endLine":97,"endColumn":47},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'globalState' is assigned a value but never used.","Identifier","unusedVar","'globalActions' is assigned a value but never used.","'setSemester' is assigned a value but never used.","'semesterDisplay' is assigned a value but never used.","'setTab' is assigned a value but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","'residentsApplied' is assigned a value but never used.","'setResidentsApplied' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]